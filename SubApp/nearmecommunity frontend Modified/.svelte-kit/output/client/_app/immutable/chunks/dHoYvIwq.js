function M(){let o={userId:null,location:null};if(typeof localStorage<"u"){const t=localStorage.getItem("userId"),e=localStorage.getItem("userLocation");if(t&&(o.userId=t),e)try{o.location=JSON.parse(e)}catch(r){console.error("Error parsing stored location:",r)}}const n=[];function l(t){return n.push(t),t(o),()=>{const e=n.indexOf(t);e!==-1&&n.splice(e,1)}}function d(t){o={...o,userId:t},n.forEach(e=>e(o))}function f(t){o={...o,location:t},n.forEach(e=>e(o))}function h(){o={userId:null,location:null},n.forEach(t=>t(o)),typeof localStorage<"u"&&(localStorage.removeItem("userId"),localStorage.removeItem("userLocation"))}function s(t,e,r,I){const a=c(r-t),i=c(I-e),u=Math.sin(a/2)*Math.sin(a/2)+Math.cos(c(t))*Math.cos(c(r))*Math.sin(i/2)*Math.sin(i/2);return 6371*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)))}function c(t){return t*(Math.PI/180)}function g(t,e){return o.location?s(o.location.latitude,o.location.longitude,t,e)<=15:!1}return{subscribe:l,setUserId:d,setLocation:f,clearUser:h,calculateDistance:s,isLocationInRange:g,get:()=>o}}const m=M();export{m as u};
